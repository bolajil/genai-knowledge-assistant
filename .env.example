# VaultMind GenAI Knowledge Assistant - Environment Variables
# Copy this file to .env and fill in your actual API keys

# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here

# Anthropic Claude API Configuration  
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# DeepSeek API Configuration
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# Mistral API Configuration
MISTRAL_API_KEY=your_mistral_api_key_here

# Ollama Configuration (Local Models)
OLLAMA_BASE_URL=http://localhost:11434

# Optional: Additional LLM Providers
GROQ_API_KEY=your_groq_api_key_here

# Weaviate Configuration (if using Weaviate)
WEAVIATE_URL=your_weaviate_cluster_url
WEAVIATE_API_KEY=your_weaviate_api_key
WEAVIATE_INSERT_LOG_EVERY=25
WEAVIATE_BATCH_CHUNK_SIZE=100
WEAVIATE_INSERT_MAX_SEC=180
# Optional connection tuning / diagnostics
# Disable HTTP/2 (some managed clusters/proxies reset h2 connections)
WEAVIATE_HTTP2=false
# Toggle TLS verification (set to false ONLY for diagnostics)
WEAVIATE_TLS_VERIFY=true
# Provide a custom CA bundle path if your org uses a proxy with custom certs
# WEAVIATE_CA_BUNDLE=C:\\path\\to\\ca-bundle.pem
# If using console.weaviate.cloud link, you can choose domain suffix
# WEAVIATE_CLUSTER_HOST_SUFFIX=weaviate.cloud
# WEAVIATE_USE_NETWORK_DOMAIN=false

# Other Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost

# --- Cloud Vector Stores ---

# AWS OpenSearch
AWS_OPENSEARCH_HOST=your-opensearch-hostname
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key

# Azure AI Search
AZURE_SEARCH_ENDPOINT=https://your-service.search.windows.net
AZURE_SEARCH_API_KEY=your_azure_search_api_key

# Google Cloud Vertex AI Matching Engine
GCP_PROJECT_ID=your_gcp_project
GCP_LOCATION=us-central1
VERTEX_AI_INDEX_ENDPOINT=projects/xxx/locations/xxx/indexEndpoints/xxx
GOOGLE_APPLICATION_CREDENTIALS=C:\\path\\to\\service_account.json

# Pinecone
PINECONE_API_KEY=your_pinecone_api_key
PINECONE_ENVIRONMENT=us-east-1-aws

# Qdrant
QDRANT_URL=https://your-cluster.qdrant.io
QDRANT_API_KEY=your_qdrant_api_key

# PGVector (PostgreSQL)
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=your_database
POSTGRES_USER=your_user
POSTGRES_PASSWORD=your_password

# --- Web Search Configuration ---
# Bing Web Search API (Recommended for production)
BING_SEARCH_API_KEY=your_bing_search_api_key_here

# Note: DuckDuckGo search works automatically if duckduckgo-search package is installed
# Install with: pip install duckduckgo-search
